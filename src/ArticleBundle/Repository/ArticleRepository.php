<?php

namespace ArticleBundle\Repository;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends \Doctrine\ORM\EntityRepository
{


    public function getarticle($user,$article)
    {

        $parameters = array(
            'user' => $user,
            'article'=> $article

        );

        $query = $this->getEntityManager()
            ->createQuery("SELECT u.id as iduser , a.id as id , a.date , a.titre , a.image, a.description ,CASE  WHEN r.user =:user THEN r.type ELSE 'none' END as Rated,SUM(CASE WHEN r.type = 'Like' THEN 1 ELSE 0 END ) as likes , SUM(CASE WHEN r.type = 'Dislike' THEN 1 ELSE 0 END ) as dislikes ,
            u.username as auteur from AppBundle:Article a LEFT JOIN AppBundle:RatingArticle r with a.id=r.article LEFT JOIN AppBundle:User u with u = r.user WHERE a =:article  GROUP BY a.id")
            ->setParameters($parameters);
        return $query->getResult();
    }


    public function getarticlebytheme($theme)
    {

        $parameters = array(
            'theme' => $theme


        );

        $query = $this->getEntityManager()
            ->createQuery("SELECT a from AppBundle:Article a WHERE a.theme =:theme  ")
            ->setParameters($parameters);
        return $query->getResult();
    }


    public function getthemebyname($theme)
    {

        $parameters = array(
            'theme' => $theme


        );

        $query = $this->getEntityManager()
            ->createQuery("SELECT t from AppBundle:Theme t WHERE t.libelle =:theme  ")
            ->setParameters($parameters);
        return $query->getResult();
    }

    public function getcoments($id)
    {

        $parameters = array(
            'id' => $id


        );

        $query = $this->getEntityManager()
            ->createQuery("SELECT count(c) as nb from AppBundle:CommentaireArticle c WHERE c.Article =:id  ")
            ->setParameters($parameters);
        return $query->getResult();
    }
}

